(define char-empty-tree #\*)
(define open-figure-bracket #\{)
(define close-figure-bracket #\})

(define (remove-whitespace str)
    (define (loop i cleared-str)
      (if (= i (string-length str))
          cleared-str
          (if (char-whitespace? (string-ref str i))
              (loop (+ i 1) cleared-str)
              (loop (+ i 1) (string-append cleared-str (string (string-ref str i)))))))
    (loop 0 ""))

(define (number-of-symbols symbol str)
  (define (helper i counter)
    (cond
      ((= i (string-length str)) counter)
      ((char=? (string-ref str i) symbol) (helper (+ i 1) (+ 1 counter)))
      (else (helper (+ i 1) counter))
    ))
  (helper 0 0)
  )

(define (is-there-whitespace-between-digits? str)
  (define (helper i char-before-whitespace)
    (cond
      ((= i (- (string-length str) 2)) #f)
      ((and (char-numeric? (string-ref str i)) (char-whitespace? (string-ref str (+ i 1))) (char-numeric? (string-ref str (+ i 2)))) #t)
      ((and (char-numeric? (string-ref str i)) (char-whitespace? (string-ref str (+ i 1)))) (helper (+ i 1) #t))
      ((and (char-whitespace? (string-ref str i)) (char-numeric? (string-ref str (+ i 1))) char-before-whitespace) #t)
      ((not (char-whitespace? (string-ref str i))) (helper (+ i 1) #f))
      (else (helper (+ i 1) char-before-whitespace))
    ))
  (helper 0 #f)
  )

(define (tree? str)
  (define first-char (string-ref str 0))
  (define last-char (string-ref str (- (string-length str) 1)))
  (define number-open-brackets (number-of-symbols open-figure-bracket str))
  (define number-close-brackets (number-of-symbols close-figure-bracket str))

  (define (helper i counter-tree counter-subtree string)
    (cond
      ((and (= i (- (string-length string) 1))
            (char=? (string-ref string i) close-figure-bracket)
            )
       (if (and (= counter-tree 3) (>= counter-subtree 3))
           #t
           #f))
      ((char=? (string-ref string i) close-figure-bracket) (helper (+ i 1) (- counter-tree 2) counter-subtree string))      
      ((char=? (string-ref string i) open-figure-bracket) (helper (+ i 1) counter-tree 0 string))
      ((char-numeric? (string-ref string i))
       (if (char-numeric? (string-ref string (+ i 1)))
           (helper (+ i 1) counter-tree counter-subtree string)
           (helper (+ i 1) (+ counter-tree 1) (+ counter-subtree 1) string)))
      ((char=? (string-ref string i) char-empty-tree) (helper (+ i 1) (+ counter-tree 1) (+ counter-subtree 1) string)) 
      (else #f)
      )
    )
  
  (cond
    ((equal? (remove-whitespace str) "*") #t)
    ((equal? (remove-whitespace str) "{***}") #f)
    ((not (= number-open-brackets number-close-brackets)) #f)
    ((not (equal? first-char open-figure-bracket)) #f)
    ((not (equal? last-char close-figure-bracket)) #f)
    ((is-there-whitespace-between-digits? str) #f)
    (else (helper 0 0 0 (remove-whitespace str)))))